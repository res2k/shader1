# This Travis configuration liberally borrows from the Boost.Hana one:
# Copyright Louis Dionne 2013-2017
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

language: cpp
sudo: false

addons:
  apt:
    sources: &sources
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-4.0

cache:
  ccache: true
  directories:
    - ${TRAVIS_BUILD_DIR}/travis-deps/boost-1.65.1

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - gcc-6
            - g++-6
      env: GCC_VERSION=6 BOOST_VERSION=default
      compiler: gcc-6

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - gcc-7
            - g++-7
      env: GCC_VERSION=7 BOOST_VERSION=default
      compiler: gcc-7

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - libstdc++-7-dev
      env: CLANG_VERSION=4.0 BOOST_VERSION=default
      compiler: clang-4.0

install:
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/travis-deps/
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/travis-deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  - if [[ "${BOOST_VERSION}" == "default" ]]; then BOOST_VERSION=1.65.1; fi

  - if [[ "${GCC_VERSION}" != "" ]]; then export CXX="g++-${GCC_VERSION}"; export CC="gcc-${GCC_VERSION}"; fi
  - if [[ "${CLANG_VERSION}" != "" ]]; then export CXX="clang++-${CLANG_VERSION}"; export CC="clang-${CLANG_VERSION}"; fi

  # Install Boost headers
  - |
    BOOST_DIR=${DEPS_DIR}/boost-${BOOST_VERSION}
    if [[ -z "$(ls -A ${BOOST_DIR})" ]]; then
      BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//\./_}.tar.gz"
      mkdir -p ${BOOST_DIR}
      { travis_retry wget -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}; } || exit 1
    fi
    CMAKE_OPTIONS+=" -DBOOST_ROOT=${BOOST_DIR}"

  # Install a recent CMake
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew upgrade cmake || brew install cmake
    fi
  - cmake --version

  # Install a newer cxxtest
  - |
    CXXTEST_DIR=${DEPS_DIR}/cxxtest-4.4
    CXXTEST_URL=https://github.com/CxxTest/cxxtest/releases/download/4.4/cxxtest-4.4.tar.gz
    mkdir -p ${CXXTEST_DIR}
    { travis_retry wget -O - ${CXXTEST_URL} | tar --strip-components=1 -xz -C ${CXXTEST_DIR}; } || exit 1
    CMAKE_OPTIONS+=" -DCXXTEST_PYTHON_TESTGEN_EXECUTABLE=${CXXTEST_DIR}/bin/cxxtestgen"
    CMAKE_OPTIONS+=" -DCXXTEST_INCLUDE_DIR=${CXXTEST_DIR}"

before_script:
  # Go back to the root of the project and setup the build directory
  - cd ${TRAVIS_BUILD_DIR}
  - (mkdir travis-build && cd travis-build && CC="ccache $CC" CXX="ccache $CXX" cmake .. ${CMAKE_OPTIONS})

script:
  - cd travis-build && make -j2 -k && make -j2 -k build_tests && ctest --output-on-failure -j2
