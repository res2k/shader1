# This Travis configuration liberally borrows from the Boost.Hana one:
# Copyright Louis Dionne 2013-2017
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

language: cpp
sudo: false

addons:
  apt:
    sources: &sources
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-4.0

cache:
  ccache: true
  directories:
    - ${TRAVIS_BUILD_DIR}/travis-deps/boost-1.67.0

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - gcc-6
            - g++-6
      env: GCC_VERSION=6 BOOST_VERSION=default
      compiler: gcc-6

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - gcc-7
            - g++-7
      env: GCC_VERSION=7 BOOST_VERSION=default
      compiler: gcc-7

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - gcc-8
            - g++-8
      env: GCC_VERSION=8 BOOST_VERSION=default
      compiler: gcc-8

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - gcc-8
            - g++-8
      env: GCC_VERSION=8 BOOST_VERSION=default BUILD_SHARED=off
      compiler: gcc-8

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - libstdc++-7-dev
      env: CLANG_VERSION=4.0 BOOST_VERSION=default CMAKE_OPTIONS="-DS1_SKIP_TEST_17=on"
      compiler: clang-4.0

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - libstdc++-7-dev
      env: CLANG_VERSION=5.0 BOOST_VERSION=default
      compiler: clang-5.0

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
            - libstdc++-7-dev
      env: CLANG_VERSION=6.0 BOOST_VERSION=default
      compiler: clang-6.0

      - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
            - libstdc++-7-dev
      env: CLANG_VERSION=6.0 BOOST_VERSION=default BUILD_SHARED=off
      compiler: clang-6.0

install:
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/travis-deps/
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/travis-deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  - if [[ "${BOOST_VERSION}" == "default" ]]; then BOOST_VERSION=1.67.0; fi

  - if [[ "${GCC_VERSION}" != "" ]]; then export CXX="g++-${GCC_VERSION}"; export CC="gcc-${GCC_VERSION}"; fi
  - if [[ "${CLANG_VERSION}" != "" ]]; then export CXX="clang++-${CLANG_VERSION}"; export CC="clang-${CLANG_VERSION}"; fi

  - if [[ "${LTO}" != "" ]]; then CMAKE_OPTIONS+=" -DS1_BUILD_LTO=${LTO}"; fi
  - if [[ "${BUILD_SHARED}" != "" ]]; then CMAKE_OPTIONS+=" -DS1_BUILD_SHARED=${BUILD_SHARED}"; fi

  # Install Boost headers
  - |
    BOOST_DIR=${DEPS_DIR}/boost-${BOOST_VERSION}
    if [[ -z "$(ls -A ${BOOST_DIR})" ]]; then
      BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//\./_}.tar.gz"
      mkdir -p ${BOOST_DIR}
      { travis_retry wget -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}; } || exit 1
    fi
    CMAKE_OPTIONS+=" -DBOOST_ROOT=${BOOST_DIR}"

  # Dump cmake version
  - cmake --version

before_script:
  # Go back to the root of the project and setup the build directory
  - cd ${TRAVIS_BUILD_DIR}
  - (mkdir travis-build && cd travis-build && CC="ccache $CC" CXX="ccache $CXX" cmake .. ${CMAKE_OPTIONS})

script:
  - cd travis-build && make -j2 -k && make -j2 -k build_tests && ctest --output-on-failure -j2
