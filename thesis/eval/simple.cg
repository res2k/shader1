struct VertexOutput {
  float4 Position : POSITION;
  float2 TexCoord;
  float3 litColor;
};

void vertex_main (
  in varying float4 Position,
  in varying float2 TexCoord,
  in varying float3 Normal,
  in uniform float4x4 ModelViewProj,
  in uniform float3 LightColor,
  in uniform float3 LightDirObj,
  out VertexOutput output)
{
  output.Position = mul (ModelViewProj, Position);
  float3 ambient = float3 (0.4);
  output.litColor = LightColor * dot (LightDirObj, Normal);
  output.litColor += ambient;
  output.TexCoord = TexCoord;

}

void pixel_main (in VertexOutput interpolatedVertexOutput,
  in uniform sampler2D Texture,
  out float4 outColor : COLOR)
{
  float3 surface =
    tex2D (Texture, interpolatedVertexOutput.TexCoord).rgb;
  float3 lighting =
    interpolatedVertexOutput.litColor;
  outColor.rgb = surface * lighting;
  outColor.a = 1;
}
